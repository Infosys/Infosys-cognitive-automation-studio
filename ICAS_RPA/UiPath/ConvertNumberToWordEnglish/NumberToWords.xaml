<Activity mc:Ignorable="sap sap2010 sads" x:Class="NumberToWords"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Nr" Type="InArgument(x:Int32)" />
    <x:Property Name="Word" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>NumberToWords_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Number To Words" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Default="[{ &quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;, &quot;nine&quot;, &quot;ten&quot;, &quot;eleven&quot;, &quot;twelve&quot;, &quot;thirteen&quot;, &quot;fourteen&quot;, &quot;fifteen&quot;, &quot;sixteen&quot;, &quot;seventeen&quot;, &quot;eighteen&quot;, &quot;nineteen&quot; }]" Name="unitsMap" />
      <Variable x:TypeArguments="s:String[]" Default="[{ &quot;twenty&quot;, &quot;thirty&quot;, &quot;forty&quot;, &quot;fifty&quot;, &quot;sixty&quot;, &quot;seventy&quot;, &quot;eighty&quot;, &quot;ninety&quot; }]" Name="tensMap" />
      <Variable x:TypeArguments="x:String" Name="Words">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="NumAux" />
    </Sequence.Variables>
    <If sap2010:Annotation.AnnotationText="First I check if the number is negative.If this is true then put the word &quot;minus&quot; in the string and then treat the number as a positiv one using Abs function." Condition="[Nr&lt;0]" DisplayName="Number &lt; 0" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Assign DisplayName="Assign &quot;minus&quot;" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">minus </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Abs Function to Nr" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Math.Abs(Nr)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="If the number it's zero then we return the word &quot;zero&quot; and do not make any modification regarding the number." Condition="[Nr =0]" DisplayName="If Nr equal zero" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Assign DisplayName="Assign &quot; zero&quot;" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">zero</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="If the number is greater than one million then we find out the first digits to decide how many million does we have and then apply the function Mod for getting the digits after the million's pozition." Condition="[(Nr/1000000)&gt;=1]" DisplayName="If Nr greater than one million" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Assign DisplayName="Count millions" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+unitsMap(Cint(math.Truncate(Nr/1000000)))+" million "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Nr Mod Million" sap2010:WorkflowViewState.IdRef="Assign_21">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Nr Mod 1000000]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="Here is the case when the number is between 100.000 and 1.000.000 .&#xA;" Condition="[(Nr/100000)&gt;=1]" DisplayName="Nr between 100 000 and 1 000 000" sap2010:WorkflowViewState.IdRef="If_16">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
          <Assign DisplayName="First digit assign" sap2010:WorkflowViewState.IdRef="Assign_31">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+unitsMap(Cint(math.Truncate(Nr/100000)))+" hundred "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign the digit 2 and 3 as Integer" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[NumAux]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Cint(math.Truncate(nr/1000)) Mod 100]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[NumAux&gt;0 and NumAux&lt;=99]" DisplayName="Compose name for the digit 2 and 3" sap2010:WorkflowViewState.IdRef="If_20">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                <If Condition="[Word.Length&lt;&gt;0]" sap2010:WorkflowViewState.IdRef="If_17">
                  <If.Then>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Word+"and "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <If Condition="[NumAux&lt;20]" DisplayName="If Number less than 20" sap2010:WorkflowViewState.IdRef="If_19">
                  <If.Then>
                    <Assign DisplayName="Assign from UnitsMap" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Word+unitsMap(NumAux)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <Assign DisplayName="Assign from TensMap" sap2010:WorkflowViewState.IdRef="Assign_35">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Word+tensMap(Cint(math.Truncate((NumAux/10)-2)))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[(NumAux Mod 10)&gt;0]" sap2010:WorkflowViewState.IdRef="If_18">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Word+"-"+unitsMap(NumAux Mod 10)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
          </If>
          <Assign DisplayName="Add word &quot;thousand&quot;" sap2010:WorkflowViewState.IdRef="Assign_37">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+" thousand "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="After I get the last 3 digits of the number the number will be treated 2 cases down." DisplayName="Get the last 3 digits" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Nr Mod 1000]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[(Nr/20000)&gt;=1]" DisplayName="Nr between 20 000 and 100 000" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[NumAux]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Cint(math.Truncate(nr/1000))]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[NumAux&gt;0 and NumAux&lt;=99]" DisplayName="Compose name for the digit 2 and 3" sap2010:WorkflowViewState.IdRef="If_15">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                <If Condition="[Word.Length&lt;&gt;0]" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Then>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Word+"and "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <If Condition="[NumAux&lt;20]" DisplayName="If Number less than 20" sap2010:WorkflowViewState.IdRef="If_14">
                  <If.Then>
                    <Assign DisplayName="Assign from UnitsMap" sap2010:WorkflowViewState.IdRef="Assign_26">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Word+unitsMap(NumAux)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <Assign DisplayName="Assign from TensMap" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Word+tensMap(Cint(math.Truncate((NumAux/10)-2)))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[(NumAux Mod 10)&gt;0]" sap2010:WorkflowViewState.IdRef="If_13">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Word+"-"+unitsMap(NumAux Mod 10)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
          </If>
          <Assign DisplayName="Count thousands" sap2010:WorkflowViewState.IdRef="Assign_24">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+" thousand "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Nr Mod thousand" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Nr Mod 1000]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[(Nr/1000)&gt;=1]" DisplayName="Nr between 1 000 and 20 000" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Assign DisplayName="Count thousands" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+unitsMap(Cint(math.Truncate(Nr/1000)))+" thousand "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Nr Mod thousand" sap2010:WorkflowViewState.IdRef="Assign_22">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Nr Mod 1000]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[(Nr/100)&gt;=1]" DisplayName="Nr between 100 and 1 000" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Word+unitsMap(Cint(math.Truncate(Nr/100)))+" hundred "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[Nr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[Nr Mod 100]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[Nr&gt;0 and Nr&lt;=99]" DisplayName="Nr is between 0 and 99" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <If Condition="[Word.Length&lt;&gt;0]" DisplayName="If the string is not empty, add the word &quot;and&quot;" sap2010:WorkflowViewState.IdRef="If_6">
            <If.Then>
              <Assign DisplayName="Assign &quot; and &quot;" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Word+"and "]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[Nr&lt;20]" DisplayName="Nr between 0 and 20" sap2010:WorkflowViewState.IdRef="If_8">
            <If.Then>
              <Assign DisplayName="Assign a word from UnitMap" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Word+unitsMap(Nr)]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Assign DisplayName="Assign from TensMap" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Word+tensMap(Cint(math.Truncate((Nr/10)-2)))]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[(Nr Mod 10)&gt;0]" DisplayName="Combine TensMap with UnitMap" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Word]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Word+"-"+unitsMap(Nr Mod 10)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d2tcXE1hY1xIb21lXERvY3VtZW50c1xVaVBhdGhcTnVtYmVyVG9Xb3JkRW5nbGlzaC0yMDE4MDUwNFQxNTA4MDlaLTAwMVxOdW1iZXJUb1dvcmRFbmdsaXNoXE51bWJlclRvV29yZHMueGFtbIoBQQOZAw4CAQFDNkPCAwIBBEQ2RNoBAgEDRwtHOgIBAkwFYQoDAc4BYgVvCgMBxgFwBYUBCgMBuQGGAQXhAQoCAX3iAQW1AgoCAUW2AgXLAgoCATjMAgXhAgoCASviAgWXAwoCAQVM4AFM6wEDAc8BTglfFAMB0QFirwFiuAEDAccBZAltFAMByQFwgAJwlgIDAboBcgmDARQDAbwBhgGAAYYBlQECAX6IAQnfARQDAYAB4gET4gEnAgFG5AEJswIUAgFItgITtgImAgE5uAIJyQIUAgE7zAITzAIlAgEszgIJ3wIUAgEu4gIT4gIsAgEG5AIJlQMUAgEJTwtWFAMB1gFXC14UAwHSAWULbBQDAcoBcwt6FAMBwgF7C4IBFAMBvQGJAQuQARQDAbUBkQELmAEUAwGxAZkBC84BEAMBiwHPAQvWARQDAYYB1wEL3gEUAwGBAeUBC+wBFAIBee0BC6ICEAIBU6MCC6oCFAIBTqsCC7ICFAIBSbkCC8ACFAIBQcECC8gCFAIBPM8CC9YCFAIBNNcCC94CFAIBL+UCC/ACEAIBI/ECC5QDEAIBClE3UT0DAdcBXDVcQwMB1QFZNlk6AwHTAWo2ajoDAc0BZzdnPQMBywF4NnhyAwHFAXU3dT0DAcMBgAE1gAFFAwHAAX02fToDAb4BjgE2jgFxAwG4AYsBN4sBPQMBtgGWATWWAVsDAbQBkwE2kwE+AwGyAZkBGZkBOgMBjAGbAQ/MARoDAY8B1AE21AFJAwGJAdEBN9EBPQMBhwHcATXcAUIDAYQB2QE22QE6AwGCAeoBNeoBUwIBfOcBNucBPgIBeu0BGe0BOgIBVO8BD6ACGgIBV6gCNqgCSQIBUaUCN6UCPQIBT7ACNbACQgIBTK0CNq0COgIBSr4CNr4CcAIBRLsCN7sCPQIBQsYCNcYCQgIBP8MCNsMCOgIBPdQCNtQCbgIBN9ECN9ECPQIBNdwCNdwCQQIBMtkCNtkCOgIBMOUCGeUCMQIBJOcCD+4CGAIBJvECGfECJQIBC/MCD/oCGAIBHP0CD5IDGgIBDZwBEacBFgMBqQGoARHLARYDAZAB8AER+wEWAgFx/AERnwIWAgFY7AI67AJHAgEp6QI76QJBAgEn+AI6+AJNAgEf9QI79QJBAgEd/gIRhQMaAgEYhgMRkQMWAgEOnAEfnAE3AwGqAZ4BFaUBHgMBrAGoAR+oAS8DAZEBqgEVsQEeAwGiAbQBFckBIAMBkwHwAR/wATcCAXLyARX5AR4CAXT8AR/8AS8CAVn+ARWFAh4CAWqIAhWdAiACAVuDAzyDA2oCARuAAz2AA0MCARmGAx+GAzMCAQ+IAxWPAx4CARGjAUCjAU0DAa8BoAFBoAFHAwGtAa8BQK8BVwMBpQGsAUGsAUcDAaMBtQEXvAEgAwGeAb0BF8gBHAMBlAH3AUD3AU0CAXf0AUH0AUcCAXWDAkCDAlcCAW2AAkGAAkcCAWuJAheQAiACAWaRAhecAhwCAVyNA0CNA14CARSKA0GKA0cCARK6AUK6AXQDAaEBtwFDtwFJAwGfAb0BJb0BPQMBlQG/ARvGASQDAZcBjgJCjgJ0AgFpiwJDiwJJAgFnkQIlkQI9AgFdkwIbmgIkAgFfxAFGxAFoAwGaAcEBR8EBTQMBmAGYAkaYAmgCAWKVAkeVAk0CAWA=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1047,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1047,334">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1047,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="753,210" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="753,584" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="775,958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="900,1108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="900,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="922,1632">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="1047,1782">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="753,210" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="486,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="753,584" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="775,958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="900,1108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="922,1532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="1047,1682" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1047,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1047,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="753,210" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="753,584" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="775,958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="1047,1108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="1069,7046">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="NumberToWords_1" sap:VirtualizedContainerService.HintSize="1109,7846" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>
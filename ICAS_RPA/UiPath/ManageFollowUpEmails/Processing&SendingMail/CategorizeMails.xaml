<Activity mc:Ignorable="sap sap2010 sads" x:Class="CategorizeMails"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_FromDetailsDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_out_ToDetailsDT" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CategorizeMails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Categorize mails based on last sent date and sends follow up email/new email" DisplayName="Categorize mails based on last sent date and sends follow up email/new email" sap2010:WorkflowViewState.IdRef="Sequence_20">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="SendMailsDT" />
      <Variable x:TypeArguments="x:String" Name="testDataString" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="mailMessagesSent" />
      <Variable x:TypeArguments="x:String" Name="mailSubject" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="sentMailsList" />
      <Variable x:TypeArguments="x:Int32" Name="timeOut" />
    </Sequence.Variables>
    <Assign DisplayName="Get Mail Subject" sap2010:WorkflowViewState.IdRef="Assign_29">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[mailSubject]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("MailSubject").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Get TimeOut for Outlook from Config" sap2010:WorkflowViewState.IdRef="Assign_35">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[timeOut]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(Convert.ToDouble(in_Config("TimeOutToCheckMails")))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Get List of Emails to send a New Mail/Follow Up" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[SendMailsDT]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[(From p In in_out_ToDetailsDT.AsEnumerable() Where Not (p.Item("Mail_Sent_Status").ToString.Trim.Contains(in_Config("ResponseReceivedStatus").ToString))Select p).ToList.CopyToDataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:OutputDataTable DataTable="[SendMailsDT]" DisplayName="Output Data Table - list to send mails" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[testDataString]" />
    <WriteLine DisplayName="Write Datatable to Output" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Send NewMail/Follow Up List:&quot;+testDataString.ToString]" />
    <ui:GetOutlookMailMessages Account="{x:Null}" DisplayName="Get Outlook Sent Mail Messages - with the matching Subject from Config" Filter="[&quot;@SQL=&quot; + &quot;&quot;&quot;&quot; + &quot;urn:schemas:httpmail:subject&quot; + &quot;&quot;&quot;&quot;  + &quot; like '%&quot;+mailSubject+&quot;%'&quot;]" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Sent Items" MarkAsRead="False" Messages="[mailMessagesSent]" OnlyUnreadMessages="False" TimeoutMS="[timeOut]" Top="-1" />
    <WriteLine DisplayName="Total Mails sent with the matching subject" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Mails sent count with subject:&quot;+mailSubject+&quot;: &quot; +mailMessagesSent.Count.ToString]" />
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[SendMailsDT]" DisplayName="For Each Email Id to send Mail, check for sent Mails to send followup/new mail" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:DateTime" Name="lastSentDate" />
              <Variable x:TypeArguments="x:Int32" Name="daysBetweenFollowUps" />
              <Variable x:TypeArguments="x:Int32" Name="mailCount" />
              <Variable x:TypeArguments="x:String" Name="waitForResponse" />
            </Sequence.Variables>
            <Assign DisplayName="Get list of mails for the given Email Id ordered by latest mail" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">[sentMailsList]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[(From m In mailMessagesSent Where m.To.ToString.Contains(row("To_MailID").ToString) Order By m.Headers.Get("date") Descending Select m).ToList]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get the count of mails sent" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[mailCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[sentMailsList.Count]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[mailCount&gt;0]" DisplayName="Get the date of the last sent Email for the matching Mail Id" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Assign DisplayName="Get Last Mail Sent Date" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[lastSentDate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(sentMailsList(0).Headers.Get("date").ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <WriteLine DisplayName="Count of Mails to Output" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Mail Mails Sent Count with Subject: &quot;+mailSubject+&quot; and Email Id: &quot;+row(&quot;To_MailID&quot;).ToString+&quot;: &quot;+mailCount.ToString]" />
            <Assign DisplayName="Get date interval between follow ups" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[daysBetweenFollowUps]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(in_Config("DaysBetweenFollowUps").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get WaitForResponseStatus" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[waitForResponse]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Config("WaitForResponseStatus").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[mailCount&gt;0]" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Assign DisplayName="Send New Mail" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[in_Config("NewMailStatus").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <If Condition="[DateDiff(DateInterval.Day,lastSentDate,DateTime.Now)&gt;=daysBetweenFollowUps]" DisplayName="Check for the difference between current date and the date of the last mail sent" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Assign DisplayName="Send First Follow Up" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_Config("FollowUpOneStatus").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Wait for Response" sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[waitForResponse]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <Switch x:TypeArguments="x:Int32" DisplayName="Assign Mail format to send for each Mail Id based on the number of mails already sent" Expression="[mailCount]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <Assign DisplayName="Maximum Follow Ups Reached" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[in_Config("MaximumFollowUpStatus").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Switch.Default>
              <Sequence x:Key="1" DisplayName="Send First Follow Up Mail" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <If Condition="[DateDiff(DateInterval.Day,lastSentDate,DateTime.Now)&gt;=daysBetweenFollowUps]" DisplayName="Check for the difference between current date and the date of the last mail sent" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Assign DisplayName="Send First Follow Up" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_Config("FollowUpOneStatus").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Wait for Response" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[waitForResponse]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
              <Sequence x:Key="2" DisplayName="Send Second Follow Up Mail" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <If Condition="[DateDiff(DateInterval.Day,lastSentDate,DateTime.Now)&gt;=daysBetweenFollowUps]" DisplayName="Check for the difference between current date and the date of the last mail sent" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Assign DisplayName="Send Second Follow Up" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_Config("FollowUpTwoStatus").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Wait for Response" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[waitForResponse]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
              <Sequence x:Key="3" DisplayName="Send Third Follow Up Mail" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <If Condition="[DateDiff(DateInterval.Day,lastSentDate,DateTime.Now)&gt;=daysBetweenFollowUps]" DisplayName="Check for the difference between current date and the date of the last mail sent" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Assign DisplayName="Send Third Follow Up" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_Config("FollowUpThreeStatus").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Wait for Response" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[waitForResponse]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
              <Assign x:Key="0" DisplayName="Send New Mail" sap2010:WorkflowViewState.IdRef="Assign_34">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[row("Mail_Sent_Status")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[in_Config("NewMailStatus").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke workflow to send emails based on the identified format to send." DisplayName="Invoke SendMailTrigger workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Processing&amp;SendingMail\SendMailTrigger.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_FromDetailsDT">[in_FromDetailsDT]</InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="in_out_SendMailsDT">[SendMailsDT]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke workflow to Update the status of Mass Mailing process for each Email Id in the given list." DisplayName="Invoke UpdateStatusOfMailSent workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Common\UpdateStatusOfMailSent.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ToDetailsDT">[in_out_ToDetailsDT]</InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_SendMailsDT">[SendMailsDT]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <sads:DebugSymbol.Symbol>d2hEOlxTVk5cdHJ1bmtcUHJvb2ZPZkNvbmNlcHRcRnJhbWV3b3JrXE1hc3NNYWlsaW5nQ1BUSW50ZXJuYWxcUHJvY2Vzc2luZyZTZW5kaW5nTWFpbC9DYXRlZ29yaXplTWFpbHMueGFtbGdeA9ACDgIBAWcFbg4DAYsBbwV2DgMBhwF3BX4OAwGDAX8Ff7YBAgF+gAEFgAGyAQIBe4EBBYEBkQQCAXKCAQWCAekBAgFugwEFwAIVAgESwQIFxwIdAgEKyAIFzgIdAgECbDBsUwMBjgFpMWk+AwGMAXQvdHQDAYoBcTBxOQMBiAF8NHzuAQMBhgF5NXlCAwGEAX+hAX+zAQMBgQF/I38yAgF/gAFrgAGvAQIBfIEBigSBAY4EAgF6gQH6A4EBhQQCAXiBAY8BgQG4AgIBdoEBwAOBAdQDAgF0gQGXA4EBowMCAXOCAXyCAeYBAgFvgwE2gwFFAgFsiQELvQIWAgETxQJSxQJfAgEQxAJNxAJfAgEOwwJcwwJnAgEMwQKnAsEC2AICAQvLAkvLAl8CAQjMAkvMAlgCAQbKAlzKAmcCAQTIAskCyALtAgIBA5ABDZcBFgIBaJgBDZ8BFgIBY6ABDasBEgIBXKwBDawBlwICAVqtAQ20ARYCAVa1AQ28ARYCAVG9AQ3gARICAUDhAQ28AhYCARSVAUmVAdkBAgFrkgFKkgFZAgFpnQE3nQFMAgFmmgE4mgFDAgFkoAEboAEtAgFdogERqQEaAgFfrAFyrAGUAgIBW7IBN7IBdAIBWa8BOK8BTgIBV7oBOLoBZQIBVLcBObcBSgIBUr0BG70BLQIBQb8BEcYBGgIBTckBEd4BFgIBQ+EBngHhAasBAgEV7AEPgwIaAgE1hAIPmwIaAgEqnAIPswIaAgEftAIPuwIYAgEb4wER6gEaAgEXpwE+pwGBAQIBYqQBP6QBTQIBYMQBPMQBYQIBT8EBPcEBVgIBTskBH8kBcAIBRMsBFdIBHgIBSdUBFdwBHgIBRe0BEYICFgIBNoUCEZoCFgIBK50CEbICFgIBILkCOrkCXwIBHbYCO7YCVAIBHOgBPOgBaQIBGeUBPeUBVgIBGNABQNABaQIBS80BQc0BWgIBStoBQNoBUQIBR9cBQdcBWgIBRu0BH+0BcAIBN+8BFfYBHgIBPPkBFYACHgIBOIUCH4UCcAIBLIcCFY4CHgIBMZECFZgCHgIBLZ0CH50CcAIBIZ8CFaYCHgIBJqkCFbACHgIBIvQBQPQBaQIBPvEBQfEBWgIBPf4BQP4BUQIBOvsBQfsBWgIBOYwCQIwCaQIBM4kCQYkCWgIBMpYCQJYCUQIBL5MCQZMCWgIBLqQCQKQCawIBKKECQaECWgIBJ64CQK4CUQIBJKsCQasCWgIBIw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="528,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="528,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="528,60" />
      <sap2010:ViewStateData Id="OutputDataTable_1" sap:VirtualizedContainerService.HintSize="528,22" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="528,61" />
      <sap2010:ViewStateData Id="GetOutlookMailMessages_1" sap:VirtualizedContainerService.HintSize="528,22" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="528,61" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="476,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="476,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="476,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="476,61" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="476,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="476,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="476,208" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="531,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="531,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="531,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="476,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="498,1429">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="528,1577">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="528,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="528,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="550,2581">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CategorizeMails_1" sap:VirtualizedContainerService.HintSize="590,2661" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>